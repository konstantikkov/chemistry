{"version":3,"sources":["components/block/index.jsx","components/grid-wrapper/index.jsx","components/grid-wrapper/grid-cell/index.jsx","components/image-loader/index.jsx","components/button/index.jsx","assets/kurisu_smile.svg","assets/index.js","assets/kurisu_sad.svg","assets/kurisu_finger.svg","components/text-input/index.jsx","__data__/action-types.js","__data__/actions/index.js","pages/intro-screen/step-1/index.jsx","__data__/selectors/index.js","components/radio-select/radio/decorator.jsx","components/radio-select/radio/value.jsx","components/radio-select/radio/index.jsx","components/radio-select/index.jsx","components/title/index.jsx","components/number-input/index.jsx","components/flex-wrapper/index.jsx","components/time-input/index.jsx","pages/intro-screen/step-2/index.jsx","components/main-container/index.jsx","components/background/index.jsx","components/icons/index.js","components/icons/arrow.svg","components/icons/checkmark.svg","components/icons/recycle.svg","components/icons/cross.svg","components/status-title/index.jsx","pages/status-screen/index.jsx","components/workspace-flask/index.jsx","components/drag-field/drag-flask/index.jsx","components/drag-field/drag-item/index.jsx","components/drag-field/index.jsx","components/drag-field/drop-field/index.jsx","components/task/index.jsx","pages/level-screen/index.jsx","components/notification/index.jsx","levels/index.js","components/timer/index.jsx","components/task-counter/index.jsx","pages/workflow.jsx","__data__/reducers/index.js","__data__/store.js","pages/initial/index.jsx","App.js","index.js"],"names":["Block","title","description","children","isFlex","shake","mode","className","style","display","GridWrapper","GridCell","ImageLoader","image","src","Button","handler","level","size","onClick","IMAGE_DICTIONARY","kurisu_sad","kurisu_smile","kurisu_finger","getImage","name","TextInput","placeholder","state","setState","value","onChange","event","target","SET_CLIENT_NAME","Symbol","SET_NEXT_STAGE","SET_PREV_STAGE","SET_STATUS","SET_LEVEL","SET_STATISTIC","SET_ANSWER","SET_MODE","SET_GAME_END","SET_STAGE","fetchGameEnd","type","fetchMode","time","taskNum","setLevel","level_num","fetchStatus","status","fetchStatistic","statistic","localStorage","setItem","JSON","stringify","setStage","stage","gridTemplateColumns","gridTemplateRows","Step1","next","setFlag","useState","setName","dispatch","useDispatch","gridRowStart","gridRowEnd","setTimeout","data","parse","getItem","clientName","fetchClientName","getClientName","default","getStatus","getLevel","getStatistic","getAnswer","answer","getGameEnd","gameEnd","RadioDecorator","isSelected","RadioValue","Radio","selectOption","option","RadioSelect","options","selectedOption","setSelectedOption","useCallback","key","map","Title","NumberInput","FlexWrapper","direction","TimeInput","step","height","Step2","useSelector","setMode","setTime","taskNumber","setTaskNumber","Fragment","time_","Number","substr","console","log","MainContainer","Background","theme","ICON_DICTIONARY","arrow","checkmark","recycle","cross","IconLoader","icon","marginLeft","StatusTitle","StatusScreen","score","prev","gridColumnStart","gridColumnEnd","success","error","last","width","item","String","components","length","Object","entries","find","successItem","keys","conf","fov","cameraZ","xyCoef","zCoef","lightIntensity","ambientColor","light1Color","light2Color","light3Color","light4Color","Scene","props","initScene","bind","initLights","animatePlane","animateLights","updateLightsColors","renderer","THREE","antialias","alpha","setSize","camera","position","z","aspect","simplex","SimplexNoise","animate","this","scene","group","middle_","waters","material","metalness","roughness","refractionRatio","transparent","opacity","transmission","side","clearcoat","clearcoatRoughness","middle","add","layers","forEach","layer","createLayer","y","level_","mount","appendChild","domElement","mat","color","properties","water_","push","prevProps","cancelAnimationFrame","frameId","removeChild","water","wArray","geometry","attributes","array","Date","now","i","noise4D","mArray","needsUpdate","computeBoundingSphere","lightDistance","light1","set","light2","light3","light4","d","x","Math","sin","cos","chroma","random","hex","requestAnimationFrame","render","ref","Component","DragFlask","mat_solid","mat_liquid","geo","thing","type_","noise3D","DragItem","id","select","setMouse","deselect","setDragValue","drag","visible","setVisible","onStart","onStop","onTouchMove","changedTouches","clientX","clientY","onMouseMove","DragField","items","bottle","DropField","mouse","setHoverFlag","useRef","rect","setRect","useEffect","current","getBoundingClientRect","right","left","top","bottom","Task","connect","setBottle","setError_","hover","setHover","setDrag","dragValue","setMouse_","setError","pointsFail","errors","flag","temp","assign","task","values","pointsSuccess","Notification","text","setAlert","levels","nextLevel","floor","Timer","interval","timerRef","setInterval","clearInterval","TaskCounter","total","clientId","taskNum_","level_prev","background","setBackground","alert","setTaskNum","stages","CSSTransition","in","unmountOnExit","timeout","classNames","defaultState","action","types","createStore","reducer","reducers","combineReducers","form","formReducer","appReducers","createReducer","composedEnhancer","compose","applyMiddleware","thunkMiddleware","createReduxStore","RandomInterval","randomMs","Initial","text_","setText","a","App","intro","toggleIntro","store","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ccb7df0.chunk.js","sourcesContent":["import React from 'react'\r\nimport './index.css'\r\n\r\nexport const Block = ({title, description, children, isFlex, shake, mode}) => {\r\n    return(\r\n        <div className={`Block ${shake?'Shake':''} ${mode?'Toxic':'Fire'}`} style={isFlex?{display: 'flex'}:{}}>\r\n            {\r\n                title&&<h1>{title}</h1>\r\n            }\r\n            {\r\n                description&&<p>{description}</p>\r\n            }\r\n            {\r\n                children\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './index.css'\r\n\r\nexport const GridWrapper = ({style, children}) => <div className='GridWrapper' style={style}>{children}</div>\r\n","import React from 'react'\r\n\r\nexport const GridCell = ({style, children}) => <div className='GridCell' style={style}>{children}</div>","import React from 'react'\r\nimport './index.css'\r\n\r\nexport const ImageLoader = ({image, style}) => <img className='Image' style={style} src={image} />\r\n","import React from 'react'\r\nimport './index.css'\r\n\r\nexport const Button = ({title, handler, level, size='lg'}) => <div onClick={handler} className={`Button ${level}`}><div className={`Title ${size}`}>{title}</div></div>\r\n","export default __webpack_public_path__ + \"static/media/kurisu_smile.4879e1b6.svg\";","import kurisu_smile from './kurisu_smile.svg'\r\nimport kurisu_sad from './kurisu_sad.svg'\r\nimport kurisu_finger from './kurisu_finger.svg'\r\n\r\nconst IMAGE_DICTIONARY = {\r\n    kurisu_sad,\r\n    kurisu_smile,\r\n    kurisu_finger\r\n}\r\n\r\nexport const getImage = (name) => IMAGE_DICTIONARY[name]\r\n","export default __webpack_public_path__ + \"static/media/kurisu_sad.ca0b9b80.svg\";","export default __webpack_public_path__ + \"static/media/kurisu_finger.3e616d0f.svg\";","import React from 'react'\r\nimport './index.css'\r\n\r\nexport const TextInput = ({placeholder, state, setState, size}) => {\r\n    const handler = (event) => setState(event.target.value)\r\n\r\n    return(\r\n        <input\r\n            className={`TextInput ${size}`}\r\n            placeholder={placeholder}\r\n            value={state}\r\n            onChange={handler}\r\n        />\r\n    )\r\n}\r\n","export const SET_CLIENT_NAME = Symbol('SET_CLIENT_NAME')\r\nexport const SET_NEXT_STAGE = Symbol('SET_NEXT_STAGE')\r\nexport const SET_PREV_STAGE = Symbol('SET_PREV_STAGE')\r\nexport const SET_STATUS = Symbol('SET_STATUS')\r\nexport const SET_LEVEL = Symbol('SET_LEVEL')\r\nexport const SET_STATISTIC = Symbol('SET_STATISTIC')\r\nexport const SET_ANSWER = Symbol('SET_ANSWER')\r\n\r\nexport const SET_MODE = Symbol('SET_MODE')\r\n\r\nexport const SET_GAME_END = Symbol('SET_GAME_END')\r\nexport const SET_STAGE = Symbol('SET_STAGE')","import {\r\n    SET_CLIENT_NAME,\r\n    SET_PREV_STAGE,\r\n    SET_NEXT_STAGE,\r\n    SET_STATUS,\r\n    SET_STATISTIC,\r\n    SET_LEVEL,\r\n    SET_ANSWER,\r\n    SET_MODE,\r\n    SET_GAME_END,\r\n    SET_STAGE\r\n} from '../action-types'\r\n\r\nexport const fetchClientName = (name) => {\r\n    const data = JSON.parse(localStorage.getItem('clientName'))\r\n    localStorage.setItem('clientName',name)\r\n    return {type: SET_CLIENT_NAME, clientName: data?.clientName ?? name}\r\n}\r\n\r\nexport const fetchGameEnd = () => {\r\n    return {type: SET_GAME_END}\r\n}\r\n\r\nexport const fetchMode = (mode, time, taskNum) =>{\r\n    return({type: SET_MODE, mode, time, taskNum})\r\n}\r\n\r\nexport const fetchAnswer = (answer) => {\r\n    return({type: SET_ANSWER, answer: answer})\r\n}\r\n\r\nexport const setLevel = (level, level_num) => {\r\n    return ({type: SET_LEVEL, level: level, level_num: level_num})\r\n}\r\n\r\nexport const fetchStatus = (status) => {\r\n    return {type: SET_STATUS, status: status}\r\n}\r\n\r\nexport const fetchStatistic = (statistic) => {\r\n    localStorage.setItem('statistic', JSON.stringify(statistic))\r\n    return {type: SET_STATISTIC, statistic: statistic}\r\n}\r\n\r\nexport const setStage = (stage) => {\r\n    return ({type: SET_STAGE, stage: stage})\r\n}\r\n\r\nexport const nextStage = () => {\r\n    return ({type: SET_NEXT_STAGE})\r\n}\r\n\r\nexport const prevStage = () => {\r\n    return ({type: SET_PREV_STAGE})\r\n}","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport {Block} from \"../../../components/block\";\r\nimport {GridWrapper} from \"../../../components/grid-wrapper\";\r\nimport {GridCell} from \"../../../components/grid-wrapper/grid-cell\";\r\nimport {ImageLoader} from \"../../../components/image-loader\";\r\nimport {Button} from \"../../../components/button\";\r\nimport {getImage} from \"../../../assets\";\r\nimport {TextInput} from \"../../../components/text-input\";\r\nimport {fetchClientName} from \"../../../__data__/actions\";\r\n\r\n\r\nconst style = {\r\n    gridTemplateColumns: '30% 70%',\r\n    gridTemplateRows: '80% 20%'\r\n}\r\n\r\nconst Step1 = ({next, setFlag}) => {\r\n    const [name, setName] = useState('')\r\n    const dispatch = useDispatch()\r\n    const submitName = () => {\r\n        setFlag(false)\r\n        setTimeout(()=>{\r\n            dispatch(fetchClientName(name))\r\n            next()\r\n        }, 1000)\r\n    }\r\n\r\n    return(\r\n        <GridWrapper style={style}>\r\n            <GridCell style={{gridRowStart: 1, gridRowEnd: 3}}>\r\n                <Block>\r\n                    <ImageLoader image={getImage('kurisu_smile')}/>\r\n                </Block>\r\n            </GridCell>\r\n            <Block title={'Привет, ты новенький?'} description={`Сейчас у нас урок химии и мы перходим в лабораторию. Будет очень интересно! Представься классу, чтобы приступить к занятию.`}>\r\n                <TextInput placeholder='Как тебя зовут?' size='md' state={name} setState={setName}></TextInput>\r\n            </Block>\r\n            <Button handler={submitName} title={'Продолжить'}/>\r\n        </GridWrapper>\r\n    )\r\n}\r\n\r\nexport default Step1","export const getClientName = (state) => state?.default?.clientName\r\nexport const getStatus = (state) => state?.default?.status\r\nexport const getLevel = (state) => state?.default?.level\r\nexport const getStatistic = (state) => state?.default?.statistic\r\nexport const getAnswer = (state) => state?.default?.answer\r\nexport const getGameEnd = (state) => state?.default?.gameEnd","import React from 'react'\r\nimport './decorator.css'\r\n\r\n\r\nexport const RadioDecorator = ({isSelected}) =>\r\n    <div className='RadioDecoratorOuter'>\r\n        <div className={`RadioDecorator RadioDecorator${isSelected? 'Selected': 'NonSelected'}`}>\r\n        </div>\r\n    </div>","import React from 'react'\r\nimport './value.css'\r\n\r\n//import {TextInput} from \"../../text-input\";\r\n\r\nexport const RadioValue = ({ value, children }) =>\r\n    <div className='RadioValue'>\r\n        {\r\n            children\r\n        }\r\n    </div>\r\n\r\n//export const RadioValueText = ({value}) => <div className='RadioValueText'>{value}</div>\r\n\r\n// export const RadioValueWithInput = ({value, input}) =>\r\n//     <div className='RadioValueWithInput'>\r\n//         <div>\r\n//\r\n//         </div>\r\n//         <TextInput />\r\n//     </div>","import React, { useState, useEffect } from 'react'\r\nimport {RadioDecorator} from \"./decorator\";\r\nimport {RadioValue} from \"./value\";\r\nimport './index.css'\r\n\r\nexport const Radio = ({value, isSelected, selectOption, option }) =>\r\n        <div className='Radio' onClick={() => selectOption(value)}>\r\n            <RadioDecorator isSelected={isSelected}/>\r\n            <RadioValue>\r\n                {option}\r\n            </RadioValue>\r\n        </div>","import React, { useState, useCallback } from 'react'\r\nimport {Radio} from \"./radio\";\r\n\r\n\r\nexport const RadioSelect = ({options, selectedOption, setSelectedOption}) => {\r\n    const selectOption = useCallback((key) => {\r\n        setSelectedOption(key)\r\n    },[])\r\n\r\n    return(\r\n        <div className='RadioSelect'>\r\n            {\r\n                options.map((option, key) =>\r\n                    <Radio key={key} value={key} isSelected={key === selectedOption} selectOption={selectOption} option={option}/>\r\n                )\r\n            }\r\n    </div>)\r\n}","import React from 'react'\r\nimport './index.css'\r\n\r\nexport const Title = ({value, size='sm', level}) => <div className={`Title ${size} ${level}`}>{value}</div>","import React from 'react'\r\nimport './index.css'\r\n\r\nexport const NumberInput = ({placeholder, state, setState, size}) => {\r\n    const handler = (event) => setState(event.target.value)\r\n\r\n    return(\r\n        <input\r\n            type='number'\r\n            className={`NumberInput ${size}`}\r\n            placeholder={placeholder}\r\n            value={state}\r\n            onChange={handler}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './index.css'\r\n\r\nexport const FlexWrapper = ({children, direction}) => {\r\n    return(<div className={`FlexWrapper${direction??'Horizontal'}`}>\r\n        {\r\n            children\r\n        }\r\n    </div>)\r\n}","import React from 'react'\r\nimport './index.css'\r\n\r\nexport const TimeInput = ({placeholder, state, setState, size}) => {\r\n    const handler = (event) => setState(event.target.value)\r\n\r\n    return(\r\n        <input\r\n            className={`TimeInput ${size}`}\r\n            placeholder={placeholder}\r\n            step={60}\r\n            type='time'\r\n            value={state}\r\n            onChange={handler}\r\n        />\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\nimport {Block} from \"../../../components/block\";\r\nimport {GridWrapper} from \"../../../components/grid-wrapper\";\r\nimport {GridCell} from \"../../../components/grid-wrapper/grid-cell\";\r\nimport {ImageLoader} from \"../../../components/image-loader\";\r\nimport {Button} from \"../../../components/button\";\r\nimport {getImage} from \"../../../assets\";\r\nimport {getClientName} from \"../../../__data__/selectors\";\r\nimport {RadioSelect} from \"../../../components/radio-select\";\r\nimport {Title} from \"../../../components/title\";\r\nimport {NumberInput} from \"../../../components/number-input\";\r\nimport {FlexWrapper} from \"../../../components/flex-wrapper\";\r\nimport {TimeInput} from \"../../../components/time-input\";\r\nimport {fetchMode, fetchStatistic} from \"../../../__data__/actions\";\r\n\r\nconst style = {\r\n    gridTemplateColumns: '30% 70%',\r\n    gridTemplateRows: '80% 20%',\r\n    height: '50%'\r\n}\r\n\r\nexport const Step2 = ({next, setFlag}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const clientName = useSelector(getClientName)\r\n\r\n    const [mode, setMode] = useState(0)\r\n    const [time, setTime] = useState('00:10')\r\n    const [taskNumber, setTaskNumber] = useState(10)\r\n\r\n\r\n\r\n    const handler = () => {\r\n        setFlag(false)\r\n        const time_ = Number(time.substr(0, 2)) * 3600 + Number(time.substr(3, 2)) * 60\r\n        console.log(mode, time_, taskNumber)\r\n        dispatch(fetchMode(mode, time_, Number(taskNumber)))\r\n        dispatch(fetchStatistic({\"score\":0,\"success\":0,\"error\":0,\"last\":0}))\r\n        setTimeout(()=>{\r\n            next()\r\n        }, 1000)\r\n    }\r\n\r\n    const options =\r\n        [\r\n            [\r\n                <div>Ограничение по времени</div>,\r\n                <TimeInput state={time} setState={setTime}/>\r\n            ],\r\n            [\r\n                <div>Ограничение по количеству заданий</div>,\r\n                <NumberInput state={taskNumber} setState={setTaskNumber}/>\r\n            ],\r\n            <div>Бесконечный режим игры</div>\r\n        ]\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <GridWrapper style={style}>\r\n                <GridCell style={{gridRowStart: 1, gridRowEnd: 3}}>\r\n                    <Block>\r\n                        <ImageLoader image={getImage('kurisu_smile')}/>\r\n                    </Block>\r\n                </GridCell>\r\n                <Block title={`А вот и лабратория, ${clientName}!`} description={`Ну что же, сегодня у нас урок по эксперементам с неорганической химией! Вы ее все уже знаете, так что надеюсь, вы не спалите школу:)\r\n             Кто может нам продемонстрировать, как протекают реакции на доске? О может ${clientName} сейчас покажет?`}>\r\n                    <Title value={'Выберите режим игры:'} size='lg'/>\r\n                    <RadioSelect selectedOption={mode} setSelectedOption={setMode} options={options} />\r\n                </Block>\r\n                <Button title={'Начать'} handler={handler}/>\r\n            </GridWrapper>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport './index.css'\r\n\r\nexport const MainContainer = ({stage, children}) => <div className='MainContainer'>{children}</div>","import React from 'react'\r\nimport './index.css'\r\n\r\nexport const Background = ({theme, children}) => <div className={`Background ${theme}`} >{children}</div>","import './index.css'\r\n\r\nimport arrow from './arrow.svg'\r\nimport checkmark from './checkmark.svg'\r\nimport recycle from './recycle.svg'\r\nimport cross from './cross.svg'\r\n\r\nconst ICON_DICTIONARY = {\r\n    arrow: arrow,\r\n    checkmark: checkmark,\r\n    recycle: recycle,\r\n    cross: cross\r\n}\r\n\r\nexport const IconLoader = ({icon, size='sm'}) => {\r\n    return <img className={`Icon${size}`} src={ICON_DICTIONARY[icon]}/>\r\n}","export default __webpack_public_path__ + \"static/media/arrow.87f695ec.svg\";","export default __webpack_public_path__ + \"static/media/checkmark.21ebb7ec.svg\";","export default __webpack_public_path__ + \"static/media/recycle.234b1bb4.svg\";","export default __webpack_public_path__ + \"static/media/cross.4127f50e.svg\";","import React from 'react'\r\nimport './index.css'\r\n\r\nimport {IconLoader} from \"../icons\";\r\n\r\nconst style = {\r\n    marginLeft: '12px'\r\n}\r\n\r\nexport const StatusTitle = ({level, title}) =>\r\n    <div className='StatusTitle'>\r\n        <IconLoader size='md' icon={level=='error'?'cross':'checkmark'}/>\r\n        <h1 style={style} className={level=='error'?'Error':'Success'}>{title}</h1>\r\n    </div>","import React from 'react'\r\nimport { connect, useDispatch, useSelector } from 'react-redux'\r\nimport {GridWrapper} from \"../../components/grid-wrapper\";\r\nimport {GridCell} from \"../../components/grid-wrapper/grid-cell\";\r\nimport {Block} from \"../../components/block\";\r\nimport {Button} from \"../../components/button\";\r\nimport {StatusTitle} from \"../../components/status-title\";\r\nimport {getAnswer, getClientName, getGameEnd, getLevel, getStatistic, getStatus} from \"../../__data__/selectors\";\r\nimport {Title} from \"../../components/title\";\r\nimport {FlexWrapper} from \"../../components/flex-wrapper\";\r\nimport {ImageLoader} from \"../../components/image-loader\";\r\nimport {getImage} from \"../../assets\";\r\nimport {fetchGameEnd, setStage} from \"../../__data__/actions\";\r\n\r\nconst style = {\r\n    gridTemplateColumns: '50% 50%',\r\n    gridTemplateRows: '20% 35% 15% 15% 15%',\r\n    height: '70%'\r\n}\r\n\r\nexport const StatusScreen = ({ score, prev, setFlag }) => {\r\n    const dispatch = useDispatch()\r\n    const status = useSelector(getStatus)\r\n    const statistic = useSelector(getStatistic)\r\n    const clientName = useSelector(getClientName)\r\n    const gameEnd = useSelector(getGameEnd)\r\n\r\n    const level = useSelector(getLevel)\r\n    const answer = useSelector(getAnswer)\r\n\r\n    const newLevel = () => {\r\n        setFlag(false)\r\n        setTimeout(()=>{\r\n            prev()\r\n        }, 1000)\r\n    }\r\n\r\n    const restartLevel = () => {\r\n        setFlag(false)\r\n        dispatch(fetchGameEnd())\r\n        setTimeout(()=>{\r\n            dispatch(setStage(1))\r\n        }, 1000)\r\n    }\r\n\r\n\r\n    return(\r\n        <GridWrapper style={style}>\r\n            <GridCell style={{gridColumnStart: 1, gridColumnEnd: 3}}>\r\n                <Block isFlex>\r\n                    <StatusTitle title={status === 'error'? 'Этап провален':'Этап пройден!'} level={status === 'error'? 'error':'success'}/>\r\n                </Block>\r\n            </GridCell>\r\n            <GridCell style={{gridRowStart: 2, gridRowEnd: 5}}>\r\n                <Block title={`Статистика. ${clientName}`}>\r\n                    <FlexWrapper>\r\n                        <Title size='lg' value='Ваш суммарный счет'/><Title size='lg' value={statistic.score}/>\r\n                    </FlexWrapper>\r\n                    <FlexWrapper>\r\n                        <Title size='lg' level='Success' value='Успешных этапов'/><Title level='Success' size='lg' value={statistic.success}/>\r\n                    </FlexWrapper>\r\n                    <FlexWrapper>\r\n                        <Title size='lg' level='Error' value='Проваленных этапов'/><Title level='Error' size='lg' value={statistic.error}/>\r\n                    </FlexWrapper>\r\n                    <FlexWrapper direction='Vertical'>\r\n                        <Title size='giga' value={statistic.last} level={statistic.last>0? 'Success': 'Error'}/>\r\n                        <Title size='lg' value='На этом этапе вы получили'/>\r\n                    </FlexWrapper>\r\n                </Block>\r\n            </GridCell>\r\n            <GridCell style={{ gridRowStart: 2, gridRowEnd: 4 }}>\r\n                <Block\r\n                    title={status==='error'?'Не отчаивайся!': 'Отлично!'}\r\n                    description={status==='error'?`Открой учебник на странице... ${clientName}, да ты итак все знаешь. Попробуй еще раз. Это случайность.`:`Хорошая работа, ${clientName}. Решишь еще пару примеров?`}>\r\n                    <FlexWrapper direction='Vertical'>\r\n                        <ImageLoader style={{width: '130px'}} image={getImage('kurisu_finger')}/>\r\n                    </FlexWrapper>\r\n                </Block>\r\n            </GridCell>\r\n            <GridCell style={{ gridRowStart: 4, gridRowEnd: 5 }}>\r\n                <Block isFlex={true} >\r\n                    <FlexWrapper direction='Center'>\r\n                        <Title value='Ответ:' size='lg'/>\r\n                        {\r\n                            level.success.map(\r\n                                (item, key) => <Title size='lg' value={String(level.components[item].title) + ((key === level.success.length - 1) ? ' ' : ' +')}/>)\r\n                        }\r\n                    </FlexWrapper>\r\n                </Block>\r\n            </GridCell>\r\n            <GridCell style={{ gridRowStart: 5, gridRowEnd: 6,  gridColumnStart: 2, gridColumnEnd: 3 }}>\r\n                <Block isFlex={true} >\r\n                    <FlexWrapper direction='Center'>\r\n                        <Title value='Ваш ответ:' size='lg'/>\r\n                        {\r\n                            Object.entries(answer).map(\r\n                                (item, key) =>\r\n                                    <Title\r\n                                        size = 'lg'\r\n                                        level = {`${\r\n                                            level.success.find((successItem) => successItem===Number(item[0])) ? 'Success' : 'Error'\r\n                                        }`}\r\n                                        value={item[1].title + ((key ===  Object.keys(answer).length - 1) ? '' : ' +')}\r\n                                    />)\r\n                        }\r\n                    </FlexWrapper>\r\n                </Block>\r\n            </GridCell>\r\n            {\r\n                !gameEnd?\r\n                    <Button title=\"Следующий этап\" handler={newLevel}/>\r\n                    :\r\n                    <Button title='В меню' handler={restartLevel}/>\r\n            }\r\n        </GridWrapper>\r\n    )\r\n}\r\n\r\n//\r\n//`${()=>{\r\n//                                             const item_ = level.success.find((successItem)=>successItem===item[0])\r\n//\r\n//                                         }}`\r\n//\r\n\r\n// {`${()=>{\r\n//     const item_ =level.success.find((successItem)=>successItem===item[0])\r\n//     console.log(item_, 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa')\r\n//     return level.success.find((successItem)=>successItem===item[0])?'Success': 'Error'\r\n// }}`}","import React, { Component } from 'react'\r\nimport * as THREE from 'three'\r\nimport SimplexNoise from 'simplex-noise';\r\nimport chroma from \"chroma-js\";\r\n\r\n\r\nconst conf = {\r\n    fov: 75,\r\n    cameraZ: 75,\r\n    xyCoef: 50,\r\n    zCoef: 10,\r\n    lightIntensity: 0.9,\r\n    ambientColor: 0x000000,\r\n    light1Color: 0x0E09DC,\r\n    light2Color: 0x1CD1E1,\r\n    light3Color: 0x18C02C,\r\n    light4Color: 0xee3bcf\r\n};\r\n\r\nclass Scene extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.initScene = this.initScene.bind(this)\r\n        this.initLights = this.initLights.bind(this)\r\n        this.animatePlane = this.animatePlane.bind(this)\r\n        this.animateLights = this.animateLights.bind(this)\r\n        this.updateLightsColors = this.updateLightsColors.bind(this)\r\n        this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n        this.renderer.setSize(300, 300)\r\n        this.camera = new THREE.PerspectiveCamera(conf.fov);\r\n        this.camera.position.z = conf.cameraZ;\r\n        this.camera.aspect = 1;\r\n        this.simplex = new SimplexNoise();\r\n        this.animate = this.animate.bind(this)\r\n    }\r\n\r\n\r\n\r\n    initScene() {\r\n        this.scene = new THREE.Scene();\r\n        this.initLights();\r\n        //const mat_ = new THREE.MeshPhongMaterial({ color: 0xffffff, transparent: true,\r\n            //opacity: 0.3 });\r\n        //const mat__ = new THREE.MeshPhongMaterial({ color: 0xff0000, transparent: true,\r\n            //opacity: 0.5 });\r\n        this.group = new THREE.Group()\r\n        const middle_ = new THREE.CylinderGeometry(15, 15, 30, 32)\r\n        //const water_ = new THREE.CylinderBufferGeometry(14.9, 14.9, 10, 115)\r\n        //const water__ = new THREE.CylinderBufferGeometry(14.9, 14.9, 10, 115)\r\n        this.waters = []\r\n        const material = new THREE.MeshPhysicalMaterial({\r\n            metalness: 1.0,\r\n            roughness: 0.2,\r\n            refractionRatio: 0.95,\r\n            transparent: true,\r\n            opacity: 0.1,\r\n            transmission: 0.1,\r\n            side: THREE.BackSide,\r\n            clearcoat: 1.0,\r\n            clearcoatRoughness: 1\r\n        })\r\n        this.middle = new THREE.Mesh(middle_, material)\r\n        //this.water = new THREE.Mesh(water_, mat_)\r\n        //this.water___ = new THREE.Mesh(water__, mat__)\r\n        this.group.add(this.middle)\r\n        // this.group.add(this.water)\r\n        // this.group.add(this.water___)\r\n        this.scene.add(this.group)\r\n        //this.water___.position.y = -10\r\n        //this.water.position.y = -10\r\n        this.props.props.layers.forEach((layer, key) => this.createLayer(layer, key))\r\n        this.group.position.y = -20;\r\n        this.group.position.z = 40\r\n        console.log(this.props)\r\n        this.camera.position.z = 90\r\n        this.camera.position.y = -9\r\n        this.level_ = 0\r\n        this.mount.appendChild(this.renderer.domElement)\r\n    }\r\n\r\n\r\n    createLayer(layer, key) {\r\n        const mat = new THREE.MeshPhongMaterial({ color: layer.properties.color, transparent: true,\r\n            opacity: layer.properties.opacity })\r\n        const water_ = new THREE.CylinderBufferGeometry(14.9 - key * 0.01, 14.9 - key * 0.01, 5 + key * 2, 115)\r\n        this.waters.push(new THREE.Mesh(water_, mat))\r\n        this.waters[key].position.y = -12\r\n        this.group.add(this.waters[key])\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n            cancelAnimationFrame(this.frameId)\r\n            this.initScene();\r\n            this.animate();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.initScene();\r\n        this.animate();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        cancelAnimationFrame(this.frameId)\r\n        this.mount.removeChild(this.renderer.domElement)\r\n    }\r\n\r\n\r\n    animatePlane() {\r\n            this.waters.forEach((water, key) => {\r\n            const wArray = this.waters[key].geometry.attributes.position.array;\r\n            const time = Date.now() * 0.0002;\r\n            if(key === 0){\r\n                for (let i = wArray.length / 2; i < wArray.length; i += 3) {\r\n                    wArray[i + 1] = this.simplex.noise4D(wArray[i] / 50, wArray[i + 1] / 50, time, 4.34) * 3  + 5;\r\n                }\r\n                for (let i = 0; i < wArray.length / 8 + 3; i += 3) {\r\n                    wArray[i + 1] = wArray[(wArray.length / 2) + i + 1]\r\n                }\r\n                for (let i = 261; i < 347; i += 3) {\r\n                    wArray[i+1] = wArray[(wArray.length / 2) + i + 1]\r\n                }\r\n            }\r\n            else{\r\n                const mArray = this.waters[key - 1].geometry.attributes.position.array;\r\n                for (let i = 0; i < wArray.length / 4 + 3; i += 3) {\r\n                    wArray[i + 1] = mArray[(wArray.length / 2) + i + 1]\r\n                }\r\n                for (let i = 0; i < mArray.length; i += 3) {\r\n                    wArray[i + 1] = mArray[i + 1] + 5\r\n                }\r\n            }\r\n            this.waters[key].geometry.attributes.position.needsUpdate = true;\r\n            this.waters[key].geometry.computeBoundingSphere()\r\n        })\r\n\r\n        // const wArray = this.water.geometry.attributes.position.array;\r\n        // const mArray = this.water___.geometry.attributes.position.array;\r\n        // const time = Date.now() * 0.0002;\r\n        // for (let i = wArray.length / 2; i < wArray.length; i += 3) {\r\n        //     wArray[i + 1] = this.simplex.noise4D(wArray[i] / 50, wArray[i + 1] / 50, time, 4.34) * 10 + 5;\r\n        // }\r\n        // for (let i = 0; i < wArray.length / 8 + 3; i += 3) {\r\n        //     wArray[i + 1] = wArray[(wArray.length / 2) + i + 1]\r\n        // }\r\n        // for (let i = 261; i < 347; i += 3) {\r\n        //     wArray[i+1] = wArray[(wArray.length / 2) + i + 1]\r\n        // }\r\n        //\r\n        //\r\n        // for (let i = 0; i < wArray.length / 4 + 3; i += 3) {\r\n        //     mArray[i + 1] = wArray[(wArray.length / 2) + i + 1]\r\n        // }\r\n        // for (let i = 0; i < mArray.length; i += 3) {\r\n        //     mArray[i + 1] = wArray[i + 1] + 5\r\n        // }\r\n\r\n        // //console.log( mArray.length * 3 / 4)\r\n        // for (let i = mArray.length / 2; i < mArray.length; i += 3) {\r\n        //     mArray[i + 1] = wArray[i + 1] + 5\r\n        // }\r\n        // for (let i = 0; i < wArray.length / 8 + 3; i += 3) {\r\n        //     mArray[i + 1] = wArray[(wArray.length / 2) + i + 1] + 5\r\n        // }\r\n        // for (let i = 261; i < 347; i += 3) {\r\n        //     mArray[i+1] = wArray[(wArray.length / 2) + i + 1] + 5\r\n        // }\r\n        //this.water.geometry.attributes.position.needsUpdate = true;\r\n        //this.water___.geometry.attributes.position.needsUpdate = true;\r\n    }\r\n\r\n    initLights() {\r\n        const r = 90;\r\n        const y = -20;\r\n        const lightDistance = 500;\r\n\r\n\r\n        this.light1 = new THREE.PointLight(conf.light1Color, conf.lightIntensity, lightDistance);\r\n        this.light1.position.set(0, y, r);\r\n        this.scene.add(this.light1);\r\n        this.light2 = new THREE.PointLight(conf.light2Color, conf.lightIntensity, lightDistance);\r\n        this.light2.position.set(0, -y, -r);\r\n        this.scene.add(this.light2);\r\n        this.light3 = new THREE.PointLight(conf.light3Color, conf.lightIntensity, lightDistance);\r\n        this.light3.position.set(r, y, 0);\r\n        this.scene.add(this.light3);\r\n        this.light4 = new THREE.PointLight(conf.light4Color, conf.lightIntensity, lightDistance);\r\n        this.light4.position.set(-r, y, 0);\r\n        this.scene.add(this.light4);\r\n    }\r\n\r\n    animateLights() {\r\n        const time = Date.now() * 0.001;\r\n        const d = 50;\r\n        this.light1.position.x = Math.sin(time * 0.1) * d;\r\n        this.light1.position.z = Math.cos(time * 0.2) * d;\r\n        this.light2.position.x = Math.cos(time * 0.3) * d;\r\n        this.light2.position.z = Math.sin(time * 0.4) * d;\r\n        this.light3.position.x = Math.sin(time * 0.5) * d;\r\n        this.light3.position.z = Math.sin(time * 0.6) * d;\r\n        this.light4.position.x = Math.sin(time * 0.7) * d;\r\n        this.light4.position.z = Math.cos(time * 0.8) * d;\r\n    }\r\n    updateLightsColors() {\r\n        conf.light1Color = chroma.random().hex();\r\n        conf.light2Color = chroma.random().hex();\r\n        conf.light3Color = chroma.random().hex();\r\n        conf.light4Color = chroma.random().hex();\r\n        this.light1.color = new THREE.Color(conf.light1Color);\r\n        this.light2.color = new THREE.Color(conf.light2Color);\r\n        this.light3.color = new THREE.Color(conf.light3Color);\r\n        this.light4.color = new THREE.Color(conf.light4Color);\r\n    }\r\n\r\n    animate() {\r\n        this.frameId = requestAnimationFrame(this.animate);\r\n\r\n        this.animatePlane();\r\n        this.animateLights();\r\n\r\n        this.renderer.render(this.scene, this.camera);\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n\r\n                style={{ width: '300px', height: '300px'}}\r\n                ref={(mount) => { this.mount = mount }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Scene\r\n","import React, { Component } from 'react'\r\nimport * as THREE from 'three'\r\nimport SimplexNoise from 'simplex-noise';\r\nimport chroma from \"chroma-js\";\r\n\r\n\r\nconst conf = {\r\n    fov: 75,\r\n    cameraZ: 75,\r\n    xyCoef: 50,\r\n    zCoef: 10,\r\n    lightIntensity: 0.9,\r\n    ambientColor: 0x000000,\r\n    light1Color: 0x0E09DC,\r\n    light2Color: 0x1CD1E1,\r\n    light3Color: 0x18C02C,\r\n    light4Color: 0xee3bcf\r\n};\r\n\r\nclass DragFlask extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.props = props.props\r\n        this.initScene = this.initScene.bind(this)\r\n        this.initLights = this.initLights.bind(this)\r\n        this.animatePlane = this.animatePlane.bind(this)\r\n        this.animateLights = this.animateLights.bind(this)\r\n        this.updateLightsColors = this.updateLightsColors.bind(this)\r\n        this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n        this.renderer.setSize(100, 100)\r\n        this.camera = new THREE.PerspectiveCamera(conf.fov);\r\n        this.camera.position.z = conf.cameraZ;\r\n        this.camera.aspect = 1;\r\n        this.simplex = new SimplexNoise();\r\n        this.animate = this.animate.bind(this)\r\n    }\r\n\r\n\r\n\r\n    initScene() {\r\n        this.scene = new THREE.Scene();\r\n        this.initLights();\r\n        this.group = new THREE.Group()\r\n        const middle_ = new THREE.CylinderGeometry(10, 15, 30, 32)\r\n        const material = new THREE.MeshPhysicalMaterial({\r\n            metalness: 1.0,\r\n            roughness: 0.2,\r\n            refractionRatio: 0.95,\r\n            transparent: true,\r\n            opacity: 0.1,\r\n            transmission: 0.1,\r\n            side: THREE.BackSide,\r\n            clearcoat: 1.0,\r\n            clearcoatRoughness: 1\r\n        })\r\n        const mat_solid = new THREE.MeshPhysicalMaterial({ color: this.props.props.color})\r\n        console.log(this.props?.color)\r\n        const mat_liquid = new THREE.MeshPhongMaterial({ color: this.props.props.color, transparent: true,\r\n            opacity: this.props?.props.opacity })\r\n        this.middle = new THREE.Mesh(middle_, material)\r\n        this.group.add(this.middle)\r\n        this.scene.add(this.group)\r\n        const geo = new THREE.CylinderBufferGeometry(12.9, 14.9 , 10, 115)\r\n        this.thing = new THREE.Mesh(geo, (this.props.props.type_ === 'liquid')?mat_liquid:mat_solid)\r\n        this.group.add(this.thing)\r\n        this.thing.position.y = -10\r\n        this.group.position.y = -20;\r\n        this.group.position.z = 40\r\n        console.log(this.props)\r\n        this.camera.position.z = 90\r\n        this.camera.position.y = -9\r\n        this.mount.appendChild(this.renderer.domElement)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.simplex = new SimplexNoise();\r\n        this.initScene();\r\n        this.animate();\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        cancelAnimationFrame(this.frameId)\r\n        this.mount.removeChild(this.renderer.domElement)\r\n    }\r\n\r\n    animatePlane() {\r\n        const wArray = this.thing.geometry.attributes.position.array;\r\n        const time = Date.now() * 0.0002;\r\n        for (let i = wArray.length / 2; i < wArray.length; i += 3) {\r\n            wArray[i + 1] = this.props.props.type_==='liquid' ?\r\n                this.simplex.noise4D(wArray[i] / 50, wArray[i + 1] / 50, time, (4.34)) * 3  + 5 :\r\n                this.simplex.noise3D(wArray[i] / 50, wArray[i + 1] / 50, wArray[i + 2] / 50) * 3  + 5 ;\r\n        }\r\n        for (let i = 0; i < wArray.length / 8 + 3; i += 3) {\r\n            wArray[i + 1] = wArray[(wArray.length / 2) + i + 1]\r\n        }\r\n        for (let i = 261; i < 347; i += 3) {\r\n            wArray[i+1] = wArray[(wArray.length / 2) + i + 1]\r\n        }\r\n        this.thing.geometry.attributes.position.needsUpdate = true;\r\n        this.thing.geometry.computeBoundingSphere();\r\n    }\r\n\r\n    initLights() {\r\n        const r = 90;\r\n        const y = -20;\r\n        const lightDistance = 500;\r\n\r\n\r\n        this.light1 = new THREE.PointLight(conf.light1Color, conf.lightIntensity, lightDistance);\r\n        this.light1.position.set(0, y, r);\r\n        this.scene.add(this.light1);\r\n        this.light2 = new THREE.PointLight(conf.light2Color, conf.lightIntensity, lightDistance);\r\n        this.light2.position.set(0, -y, -r);\r\n        this.scene.add(this.light2);\r\n        this.light3 = new THREE.PointLight(conf.light3Color, conf.lightIntensity, lightDistance);\r\n        this.light3.position.set(r, y, 0);\r\n        this.scene.add(this.light3);\r\n        this.light4 = new THREE.PointLight(conf.light4Color, conf.lightIntensity, lightDistance);\r\n        this.light4.position.set(-r, y, 0);\r\n        this.scene.add(this.light4);\r\n    }\r\n\r\n    animateLights() {\r\n        const time = Date.now() * 0.001;\r\n        const d = 50;\r\n        this.light1.position.x = Math.sin(time * 0.1) * d;\r\n        this.light1.position.z = Math.cos(time * 0.2) * d;\r\n        this.light2.position.x = Math.cos(time * 0.3) * d;\r\n        this.light2.position.z = Math.sin(time * 0.4) * d;\r\n        this.light3.position.x = Math.sin(time * 0.5) * d;\r\n        this.light3.position.z = Math.sin(time * 0.6) * d;\r\n        this.light4.position.x = Math.sin(time * 0.7) * d;\r\n        this.light4.position.z = Math.cos(time * 0.8) * d;\r\n    }\r\n    updateLightsColors() {\r\n        conf.light1Color = chroma.random().hex();\r\n        conf.light2Color = chroma.random().hex();\r\n        conf.light3Color = chroma.random().hex();\r\n        conf.light4Color = chroma.random().hex();\r\n        this.light1.color = new THREE.Color(conf.light1Color);\r\n        this.light2.color = new THREE.Color(conf.light2Color);\r\n        this.light3.color = new THREE.Color(conf.light3Color);\r\n        this.light4.color = new THREE.Color(conf.light4Color);\r\n    }\r\n\r\n    animate() {\r\n        this.frameId = requestAnimationFrame(this.animate);\r\n        this.animatePlane();\r\n        this.animateLights();\r\n\r\n        this.renderer.render(this.scene, this.camera);\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{ width: '100px', height: '100px' }}\r\n                ref={(mount) => { this.mount = mount }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default DragFlask\r\n","import React, { useState } from 'react'\r\nimport Draggable from 'react-draggable';\r\nimport './index.css'\r\n\r\nimport DragFlask from \"../drag-flask\";\r\n\r\nexport const DragItem = ({ id, title, type, properties, select, deselect, setMouse, setDragValue, drag, isSelected }) => {\r\n    const [visible, setVisible] = useState(true)\r\n    if(isSelected && visible){\r\n        setVisible(false)\r\n    }\r\n    if(!isSelected && !visible){\r\n        setVisible(true)\r\n    }\r\n    console.log(properties)\r\n    return(\r\n        <Draggable\r\n            onStart={() => {\r\n                select(true)\r\n                setDragValue(id)\r\n                setVisible(true)\r\n        }}\r\n            onStop={() =>{\r\n                select(false)\r\n                setVisible(false)\r\n        }}\r\n        >\r\n            <div className='DragItem Block' onTouchMove={(event) => {\r\n                console.log(event)\r\n                if(drag === id){\r\n                    setMouse(event.changedTouches[0].clientX, event.changedTouches[0].clientY)\r\n                }\r\n            }}\r\n                 onMouseMove={(event) => {\r\n                console.log(event)\r\n                if(drag === id){\r\n                    setMouse(event.clientX, event.clientY)\r\n                }\r\n            }}>\r\n                <div className='DragItemTitle'>{title}</div>\r\n                {\r\n                    visible && <DragFlask props={{type_:type, color: properties.color, opacity: properties.opacity}} />\r\n                }\r\n            </div>\r\n        </Draggable>\r\n    )\r\n}\r\n\r\n// import React, { useState } from 'react'\r\n// import Scene from \"../../workspace-flask\";\r\n// import {Block} from \"../../block\";\r\n//\r\n// export const DragItem = ({title, }) => {\r\n//     const [visible, setVisible] = useState(false)\r\n//\r\n//     return(\r\n//         <div draggable=\"true\" on onDragStart={()=>{setVisible(true)}} onDragEnd={()=>setVisible(false)}>\r\n//             <div>говно</div>\r\n//             {\r\n//                 visible&&                 <Scene props={{\r\n//                     layers: [\r\n//                         {\r\n//                             color: 0xffffff,\r\n//                             opacity: 0.6\r\n//                         },\r\n//                         {\r\n//                             color: 0x0000FF,\r\n//                             opacity: 0.7\r\n//                         },\r\n//                         {\r\n//                             color: 0xffffff,\r\n//                             opacity: 0.6\r\n//                         }\r\n//                     ]\r\n//                 }}/>\r\n//             }\r\n//         </div>\r\n//     )\r\n// }","import React from 'react'\r\nimport {DragItem} from \"./drag-item\";\r\nimport './index.css'\r\n\r\nexport const DragField = ({items, select, deselect, setMouse, setDragValue, drag, bottle}) => {\r\n    console.log(items)\r\n    return(\r\n        <div className='DragField'>\r\n            {\r\n                Object.entries(items).map(item => <DragItem drag={drag} id={item[0]} isSelected={bottle[item[0]]} setDragValue={setDragValue} setMouse={setMouse} select={select} deselect={deselect} title={item[1].title} type={item[1].type} properties={item[1].properties}/>)\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect, useRef } from 'react'\r\nimport './index.css'\r\n\r\nexport const DropField = ({mouse, setHoverFlag, drag, children}) => {\r\n    const ref = useRef();\r\n    const [rect, setRect] = useState()\r\n    const [flag, setFlag] = useState(false)\r\n    useEffect(() => {\r\n        setRect(ref.current.getBoundingClientRect())\r\n    }, [drag])\r\n\r\n    const hover = () => {\r\n        setHoverFlag(true)\r\n        setFlag(true)\r\n    }\r\n    const outHover = () => {\r\n        setHoverFlag(false)\r\n        setFlag(false)\r\n    }\r\n    useEffect(() => {\r\n        if(drag){\r\n            if( mouse?.x < rect?.right\r\n                && mouse?.x > rect?.left\r\n                && mouse?.y > rect?.top\r\n                && mouse?.y < rect?.bottom){\r\n                console.log(33333)\r\n                hover()\r\n            }\r\n            else{\r\n                outHover(mouse)\r\n                console.log(22222222)\r\n            }\r\n        }\r\n    }, [drag, mouse])\r\n\r\n    return(<div className='DropField' ref={ref}>\r\n        {children}\r\n    </div>)\r\n}","import React from 'react'\r\nimport './index.css'\r\nimport {Title} from \"../title\";\r\n\r\nexport const Task = ({title, items}) => {\r\n    return(\r\n        <div className='Task'>\r\n            <Title value={title} size='lg'/>\r\n            {\r\n                items.map(item => <div className='TaskItem'><Title value={item} size='lg'/></div>)\r\n            }\r\n        </div>\r\n    )\r\n}","import React, {useState, useCallback, useEffect} from 'react'\r\nimport { connect, useDispatch, useSelector } from 'react-redux'\r\nimport {GridWrapper} from \"../../components/grid-wrapper\";\r\nimport {GridCell} from \"../../components/grid-wrapper/grid-cell\";\r\nimport {Block} from \"../../components/block\";\r\nimport {Button} from \"../../components/button\";\r\nimport Scene from \"../../components/workspace-flask\";\r\nimport {DragField} from \"../../components/drag-field\";\r\nimport {DropField} from \"../../components/drag-field/drop-field\";\r\nimport {Task} from \"../../components/task\";\r\nimport {fetchAnswer, fetchStatistic, fetchStatus} from \"../../__data__/actions\";\r\nimport {getLevel, getStatistic} from \"../../__data__/selectors\";\r\n\r\nimport './index.css'\r\n\r\nconst style = {\r\n    gridTemplateColumns: '60% 40%',\r\n    gridTemplateRows: '20% 70% 15%',\r\n    height: '70%'\r\n}\r\n\r\nconst LevelScreen = ({ status, score, level, setFlag, next, statistic }) => {\r\n    const dispatch = useDispatch()\r\n    const [bottle, setBottle] = useState({})\r\n    const [error, setError_] = useState(false)\r\n    const [hover, setHover] = useState(false)\r\n    const [drag, setDrag] = useState(false)\r\n    const [dragValue, setDragValue] = useState(false)\r\n    const [mouse, setMouse_] = useState({x: 0, y: 0})\r\n    const setMouse = useCallback((x , y) => {\r\n            setMouse_({x, y})\r\n    },[])\r\n    console.log(bottle)\r\n\r\n    const setError = () => {\r\n        setFlag(false)\r\n        setTimeout(()=>{\r\n            dispatch(fetchStatus('error'))\r\n            statistic.error++\r\n            statistic.score+=level.pointsFail\r\n            statistic.last = level.pointsFail\r\n            localStorage.setItem('statistic', JSON.stringify(statistic))\r\n            dispatch(fetchStatistic(statistic))\r\n            next()\r\n        },1000)\r\n    }\r\n\r\n    const setSuccess = () => {\r\n        setFlag(false)\r\n        setTimeout(()=>{\r\n            dispatch(fetchStatus('success'))\r\n            localStorage.setItem('statistic', JSON.stringify(statistic))\r\n            statistic.success++\r\n            statistic.last = level.pointsSuccess\r\n            statistic.score+=level.pointsSuccess\r\n            dispatch(fetchStatistic(statistic))\r\n            next()\r\n        },1000)\r\n    }\r\n\r\n    const mixHandler = () => {\r\n        dispatch(fetchAnswer(bottle))\r\n        let flag = true\r\n        if(level.success.length === Object.keys(bottle).length){\r\n            level.success.forEach((item)=>{\r\n                if(!bottle[item]){\r\n                    flag = false\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            flag=false\r\n        }\r\n        if(flag){\r\n            setSuccess()\r\n        }\r\n        else{\r\n            setError()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        level.errors.forEach((error) => {\r\n            let flag = true\r\n            for(let i = 0; i < error.length; i++){\r\n                if(!bottle[error[i]]){\r\n                    flag = false\r\n                    break;\r\n                }\r\n            }\r\n            if(flag){\r\n                setError_(true)\r\n                setTimeout(()=>{\r\n                    setError()\r\n                }, 3000)\r\n            }\r\n        })\r\n    },[bottle])\r\n\r\n    useEffect(()=>{\r\n        console.log(hover, dragValue)\r\n        if(!drag){\r\n            if(hover){\r\n                if(dragValue && !bottle[dragValue]){\r\n                    setBottle({...bottle, [dragValue]: level.components[dragValue]})\r\n                    setDragValue(false)\r\n                }\r\n            }\r\n            else if(!drag && dragValue){\r\n                let temp = Object.assign({}, bottle)\r\n                delete temp[dragValue]\r\n                setBottle(temp)\r\n                setDragValue(false)\r\n            }\r\n        }\r\n    }, [drag])\r\n\r\n    const deselect = useCallback(()=>{\r\n        setDrag(false)\r\n    }, [])\r\n\r\n    return(\r\n        <GridWrapper style={style}>\r\n            <GridCell style={{gridColumnStart: 1, gridColumnEnd: 3}}>\r\n                <Block isFlex={true}>\r\n                    <Task title={level.task.title} items={level.task.items}/>\r\n                </Block>\r\n            </GridCell>\r\n            <Block title='Компоненты'>\r\n                <DragField\r\n                    bottle={bottle}\r\n                    setMouse={setMouse}\r\n                    select={setDrag}\r\n                    setDragValue={setDragValue}\r\n                    deselect={deselect}\r\n                    drag={dragValue}\r\n                    items={level.components}/>\r\n            </Block>\r\n            <GridCell style={{gridRowStart: 2, gridRowEnd: 4, gridColumnStart: 2}}>\r\n                <Block title='Результат' shake={error}>\r\n                    <DropField mouse={mouse} drag={drag} setHoverFlag={setHover} >\r\n                        <Scene\r\n                            props={{\r\n                                layers: Object.values(bottle)\r\n                            }}/>\r\n                    </DropField>\r\n                </Block>\r\n            </GridCell>\r\n            <Button title='Перемешать' handler={mixHandler}/>\r\n        </GridWrapper>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    console.log(state)\r\n    return({\r\n        level: getLevel(state),\r\n        statistic: getStatistic(state)\r\n    })\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(LevelScreen)","import React, {useEffect} from 'react'\r\nimport './index.css'\r\n\r\nexport const Notification = ({text, mode, setAlert}) => {\r\n    useEffect(()=>{\r\n        setTimeout(()=>{\r\n            setAlert(-1)\r\n        }, 5000)\r\n    },[])\r\n    return(\r\n        <div className='Notification'>\r\n            <div className={`Notification${mode}`} />\r\n            <div className='NotificationText'>\r\n                {text}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","const levels = [\r\n    {\r\n        components:{\r\n            1: {\r\n                title: 'Ca(OH)2',\r\n                type: 'solid',\r\n                properties:{\r\n                    color: 0xD1ED58,\r\n                    opacity: 1\r\n                }\r\n            },\r\n            2: {\r\n                title: 'HNO3',\r\n                type: 'liquid',\r\n                properties:{\r\n                    color: 0x87EAED,\r\n                    opacity: 0.4\r\n                }\r\n            },\r\n            3: {\r\n                title: 'H2SO4',\r\n                type: 'liquid',\r\n                properties:{\r\n                    color: 0xB758ED,\r\n                    opacity: 0.5\r\n                }\r\n            },\r\n            4: {\r\n                title: 'Ca',\r\n                type: 'solid',\r\n                properties:{\r\n                    color: 0xED9964,\r\n                    opacity: 1\r\n                }\r\n            },\r\n        },\r\n        task: {\r\n            title:'Что необходимо смешать, чтобы получить: ',\r\n            items:['CaSO4 +', 'H2O']\r\n        },\r\n        pointsSuccess: 50,\r\n        pointsFail: -25,\r\n        success:[1,3],\r\n        errors:[[2,3]]\r\n    },\r\n    {\r\n        components:{\r\n            1: {\r\n                title: 'Zn',\r\n                type: 'solid',\r\n                properties:{\r\n                    color: 0xD1ED58,\r\n                    opacity: 1\r\n                }\r\n            },\r\n            2: {\r\n                title: 'HCl',\r\n                type: 'liquid',\r\n                properties:{\r\n                    color: 0x87EAED,\r\n                    opacity: 0.4\r\n                }\r\n            },\r\n            3: {\r\n                title: 'Cl',\r\n                type: 'liquid',\r\n                properties:{\r\n                    color: 0xB758ED,\r\n                    opacity: 0.5\r\n                }\r\n            },\r\n            4: {\r\n                title: 'ZnCl',\r\n                type: 'solid',\r\n                properties:{\r\n                    color: 0xED9964,\r\n                    opacity: 1\r\n                }\r\n            },\r\n        },\r\n        task: {\r\n            title:'Что необходимо смешать, чтобы получить: ',\r\n            items:['ZnCl2 +', 'H2']\r\n        },\r\n        pointsSuccess: 50,\r\n        pointsFail: -25,\r\n        success:[1, 2],\r\n        errors:[[2, 3]]\r\n    },\r\n    {\r\n        components:{\r\n            1: {\r\n                title: 'Fe',\r\n                type: 'solid',\r\n                properties:{\r\n                    color: 0xD1ED58,\r\n                    opacity: 1\r\n                }\r\n            },\r\n            3: {\r\n                title: 'FeCl',\r\n                type: 'liquid',\r\n                properties:{\r\n                    color: 0xB758ED,\r\n                    opacity: 0.5\r\n                }\r\n            },\r\n            4: {\r\n                title: 'CuSO3',\r\n                type: 'solid',\r\n                properties:{\r\n                    color: 0xED9964,\r\n                    opacity: 1\r\n                }\r\n            },\r\n            5: {\r\n                title: 'Zn',\r\n                type: 'solid',\r\n                properties:{\r\n                    color: 0x87EAED,\r\n                    opacity: 0.4\r\n                }\r\n            },\r\n            7: {\r\n                title: 'CuSO4',\r\n                type: 'solid',\r\n                properties:{\r\n                    color: 0x87EAED,\r\n                    opacity: 0.4\r\n                }\r\n            }\r\n        },\r\n        task: {\r\n            title:'Что необходимо смешать, чтобы получить: ',\r\n            items:['FeSO4 +', 'Cu']\r\n        },\r\n        pointsSuccess: 50,\r\n        pointsFail: -25,\r\n        success:[1,7],\r\n        errors:[]\r\n    },\r\n    {\r\n        components:{\r\n            1: {\r\n                title: 'Na2O',\r\n                type: 'solid',\r\n                properties:{\r\n                    color: 0xFFED58,\r\n                    opacity: 1\r\n                }\r\n            },\r\n            2: {\r\n                title: 'H20',\r\n                type: 'liquid',\r\n                properties:{\r\n                    color: 0xD1EDFF,\r\n                    opacity: 0.1\r\n                }\r\n            },\r\n            3: {\r\n                title: 'HNO3',\r\n                type: 'liquid',\r\n                properties:{\r\n                    color: 0xD1FF58,\r\n                    opacity: 0.4\r\n                }\r\n            },\r\n            4: {\r\n                title: 'H2SO4',\r\n                type: 'liquid',\r\n                properties:{\r\n                    color: 0xFFFFFF,\r\n                    opacity: 0.2\r\n                }\r\n            }\r\n        },\r\n        task: {\r\n            title:'Что необходимо смешать, чтобы получить: ',\r\n            items:['NaOH']\r\n        },\r\n        pointsSuccess: 50,\r\n        pointsFail: -25,\r\n        success:[1,2],\r\n        errors:[]\r\n    },\r\n    {\r\n        components:{\r\n            1: {\r\n                title: 'Al4C3',\r\n                type: 'solid',\r\n                properties:{\r\n                    color: 0xFFFFFF,\r\n                    opacity: 1\r\n                }\r\n            },\r\n            2: {\r\n                title: 'H20',\r\n                type: 'liquid',\r\n                properties:{\r\n                    color: 0xD1EDFF,\r\n                    opacity: 0.1\r\n                }\r\n            },\r\n            3: {\r\n                title: 'Al(NO3)2',\r\n                type: 'solid',\r\n                properties:{\r\n                    color: 0xFFFFFF,\r\n                    opacity: 1\r\n                }\r\n            },\r\n            4: {\r\n                title: 'H3PO4',\r\n                type: 'liquid',\r\n                properties:{\r\n                    color: 0xFF00FF,\r\n                    opacity: 0.3\r\n                }\r\n            }\r\n        },\r\n        task: {\r\n            title:'Что необходимо смешать, чтобы получить: ',\r\n            items:['Al(OH)3 +', 'CH4']\r\n        },\r\n        pointsSuccess: 50,\r\n        pointsFail: -25,\r\n        success:[1,2],\r\n        errors:[]\r\n    }\r\n]\r\n\r\nexport const nextLevel = (prev) => {\r\n    let level = prev\r\n    while(level === prev){\r\n        level = Math.floor(Math.random() * 100) % levels.length\r\n    }\r\n    return {level: levels[level], level_num: level}\r\n}","import React, { useEffect, useRef } from 'react'\r\nimport './index.css'\r\n\r\nexport const Timer = ({ time, setTime, interval = 1000, handler = () => {}}) => {\r\n    const timerRef = useRef(null)\r\n    useEffect(() => {\r\n        timerRef.current = setInterval(()=>{\r\n            setTime(prev => prev - 1)\r\n        }, interval)\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        if(time === -1){\r\n            clearInterval(timerRef.current)\r\n            handler()\r\n        }\r\n    }, [time])\r\n\r\n    return(\r\n        <div className='Timer'>\r\n            {`${Math.floor((time / 3600) % 60)} : ${Math.floor((time / 60) % 60)} : ${Math.floor(time % 60)}`}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './index.css'\r\n\r\nexport const TaskCounter = ({current, total}) => <div className='TaskCounter'>{`${current} / ${total}`}</div>\r\n","import React, { useState, useEffect } from 'react'\r\nimport {CSSTransition} from \"react-transition-group\";\r\n\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport Step1 from './intro-screen/step-1'\r\nimport { Step2 } from './intro-screen/step-2'\r\nimport {MainContainer} from \"../components/main-container\";\r\nimport {Background} from \"../components/background\";\r\nimport {fetchGameEnd, fetchMode, nextStage, prevStage, setLevel, setStage} from \"../__data__/actions\";\r\nimport {StatusScreen} from \"./status-screen\";\r\nimport LevelScreen from \"./level-screen\";\r\nimport {Notification} from \"../components/notification\";\r\nimport {nextLevel} from \"../levels\";\r\nimport {Timer} from \"../components/timer\";\r\nimport {TaskCounter} from \"../components/task-counter\";\r\n\r\n\r\nconst Workflow = ({stage, prev, next, status, level_prev, mode, time_, taskNum_, gameEnd}) => {\r\n    const [flag, setFlag] = useState(false)\r\n    const [background, setBackground] = useState('Intro')\r\n    const [alert, setAlert] = useState(false)\r\n\r\n    const [time, setTime] = useState(0)\r\n    const [taskNum, setTaskNum] = useState(0)\r\n\r\n    const dispatch = useDispatch()\r\n    const stages =\r\n        [\r\n            <Step1 next={next} setFlag={setFlag}/>,\r\n            <Step2 next={next} setFlag={setFlag}/>,\r\n            <LevelScreen setFlag={setFlag} next={next}/>,\r\n            <StatusScreen prev={prev} setFlag={setFlag}/>\r\n        ]\r\n\r\n    useEffect(()=>{\r\n        const {level, level_num} = nextLevel(level_prev)\r\n        dispatch(setLevel(level, level_num))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(stage === 2){\r\n            const {level, level_num} = nextLevel(level_prev)\r\n            dispatch(setLevel(level, level_num))\r\n        }\r\n        setFlag(true)\r\n\r\n        if(stage === 1){\r\n            setBackground('Work')\r\n        }\r\n\r\n        if(mode === 1 && stage === 3){\r\n            setTaskNum(prev => prev + 1)\r\n        }\r\n\r\n        setAlert(stage)\r\n    }, [stage])\r\n\r\n\r\n    useEffect(() => {\r\n        if(mode === 0){\r\n            setTime(time_)\r\n        }\r\n    }, [mode])\r\n\r\n    useEffect(() => {\r\n        if(!gameEnd){\r\n            setTaskNum(0)\r\n            setTime(0)\r\n            dispatch(fetchMode(-1, 0,0))\r\n        }\r\n    }, [gameEnd])\r\n\r\n    useEffect(()=>{\r\n\r\n        if(mode === 1 && taskNum === taskNum_){\r\n            dispatch(fetchGameEnd())\r\n        }\r\n        else if(mode === 0 && time===0){\r\n            dispatch(fetchGameEnd())\r\n            setFlag(false)\r\n            setTimeout(()=>{\r\n                dispatch(setStage(3))\r\n            }, 1000)\r\n        }\r\n    }, [time, taskNum])\r\n\r\n    return(\r\n            <Background theme={background}>\r\n                <CSSTransition\r\n                    in={flag}\r\n                    unmountOnExit\r\n                    timeout={1000}\r\n                    classNames={'MainContainer'}\r\n                >\r\n                    <MainContainer>\r\n                        {stages[stage]}\r\n                    </MainContainer>\r\n                </CSSTransition>\r\n                <CSSTransition\r\n                    in={alert===2}\r\n                    unmountOnExit\r\n                    timeout={1000}\r\n                    classNames={'Notification'}\r\n                >\r\n                    <Notification\r\n                        mode='Info'\r\n                        text='Перетащите элементы в пробирках в поле \"результат\". Чтобы узнать результат - нажмите кнопку \"Перемешать\".'\r\n                        setAlert={setAlert}\r\n                    />\r\n                </CSSTransition>\r\n                <CSSTransition\r\n                    in={alert===3 && status ==='error'}\r\n                    unmountOnExit\r\n                    timeout={1000}\r\n                    classNames={'Notification'}\r\n                >\r\n                    <Notification\r\n                        mode='Question'\r\n                        text='Вы получили не тот результат или смешали элементы, которые вызывают опасную реакцию'\r\n                        setAlert={setAlert}\r\n                    />\r\n                </CSSTransition>\r\n                <CSSTransition\r\n                    in={alert===3 && status !=='error'}\r\n                    unmountOnExit\r\n                    timeout={1000}\r\n                    classNames={'Notification'}\r\n                >\r\n                    <Notification\r\n                        mode='Info'\r\n                        text='Отлично! Ты молодец!'\r\n                        setAlert={setAlert}\r\n                    />\r\n                </CSSTransition>\r\n                {(mode === 0 && (stage === 2 || stage === 3) && !gameEnd) && <Timer time={time} setTime={setTime}/>}\r\n                {(mode === 1 && (stage === 2 ||stage === 3) && !gameEnd) && <TaskCounter current={taskNum} total={taskNum_}/>}\r\n            </Background>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n    clientId: state.default?.clientId,\r\n    clientName: state.default?.clientName,\r\n    stage: state.default.stage,\r\n    status: state.default.status,\r\n    time_: state.default.time,\r\n    taskNum_: state.default.taskNum,\r\n    level_prev: state.default.level_num,\r\n    mode: state.default.mode,\r\n    gameEnd: state.default.gameEnd\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    next: () => dispatch(nextStage()),\r\n    prev: () => dispatch(prevStage())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Workflow)","import * as types from '../action-types'\r\nimport {nextLevel} from \"../../levels\";\r\n\r\nconst defaultState = {\r\n    stage: localStorage.getItem('clientName')?1:0,\r\n    clientName: localStorage.getItem('clientName')??'',\r\n    level_num: 1,\r\n    gameEnd: false,\r\n    mode: -1,\r\n    time: 0,\r\n    taskNum: 0,\r\n    level: {},\r\n    answer: {},\r\n    statistic: JSON.parse(localStorage.getItem('statistic'))??{\r\n        score: 0,\r\n        success: 0,\r\n        error: 0,\r\n        last: 0\r\n    }\r\n}\r\n\r\nexport default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case types.SET_CLIENT_NAME:\r\n            return {\r\n                ...state,\r\n                clientName: action.clientName\r\n            }\r\n        case types.SET_ANSWER:\r\n            return {\r\n                ...state,\r\n                answer: action.answer\r\n            }\r\n        case types.SET_GAME_END:\r\n            return {\r\n                ...state,\r\n                gameEnd: !state.gameEnd\r\n            }\r\n        case types.SET_STAGE:\r\n            return {\r\n                ...state,\r\n                stage: action.stage\r\n            }\r\n        case types.SET_MODE:\r\n            return {\r\n                ...state,\r\n                mode: action.mode,\r\n                time: action.time,\r\n                taskNum: action.taskNum\r\n            }\r\n        case types.SET_STATISTIC:\r\n            return {\r\n                ...state,\r\n                statistic: action.statistic\r\n            }\r\n        case types.SET_LEVEL:\r\n                return {\r\n                    ...state,\r\n                    level: action.level,\r\n                    level_num: action.level_num\r\n                }\r\n        case types.SET_PREV_STAGE:\r\n            return {\r\n                ...state,\r\n                stage: state.stage - 1\r\n            }\r\n        case types.SET_NEXT_STAGE:\r\n            return {\r\n                ...state,\r\n                stage: state.stage + 1\r\n            }\r\n        case types.SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore as createReduxStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nimport * as appReducers from './reducers'\r\n\r\nexport const createReducer = (reducers= {}) => combineReducers({\r\n    form: formReducer,\r\n    ...reducers,\r\n    ...appReducers\r\n})\r\n\r\nexport const createStore = () => {\r\n    const reducer = createReducer()\r\n    const composedEnhancer = compose(\r\n        applyMiddleware(thunkMiddleware)\r\n    )\r\n    return createReduxStore(reducer, composedEnhancer)\r\n}\r\nexport default createStore()","import React, {useState, useEffect} from 'react'\r\nimport './index.css'\r\n\r\nconst RandomInterval = () => {\r\n    const randomMs = 150 * Math.random()\r\n    return randomMs < 50 ? 10 : randomMs\r\n}\r\n\r\n\r\nexport const Initial = () => {\r\n    const text_ = 'made by konstantikkov'\r\n    const [text, setText] = useState('')\r\n    useEffect(async ()=>{\r\n        if(text.length < text_.length)\r\n            await setTimeout(()=>setText(prev => prev + text_[prev.length]),RandomInterval())\r\n    }, [text])\r\n    return(\r\n        <div className='InitialScreen'>\r\n            <div className='KurisuGroup'>\r\n                <div className='Kurisu'>\r\n\r\n                </div>\r\n                <div className='CodeBack'>\r\n                    <div className='MyName'>\r\n                        <span className='Cursor'>> </span>\r\n                        {text}\r\n                        <span className='BlinkingCursor'>_</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n}\r\n","import React, {useState, useEffect} from 'react'\nimport './App.css';\nimport LIGHT_THEME from './components/theme'\nimport Workflow from \"./pages/workflow\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./__data__\";\nimport {Initial} from \"./pages/initial\";\n\nfunction App() {\n    const [intro, toggleIntro] = useState(true)\n    useEffect(()=>{\n        setTimeout(() => toggleIntro(false), 5200)\n    }, [])\n  return (\n    <div className=\"App\">\n        <Provider store={store}>\n            {\n                intro && <Initial/>\n            }\n            {\n                !intro && <Workflow/>\n            }\n        </Provider>\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}